# Fundamentos de Geomática y visualización de Datos Raster {#sec-raster}

En las Ciencias de los Tierra, existen principalmente dos formas de representar la realidad, los datos vectoriales y los datos raster.

## Datos vectoriales

Los datos vectoriales están compuestos de posiciones geométricas discretas (valores `x`,`y`), conocidos como vértices, que definen la forma del objeto espacial. La organización de los vértices determina el tipo de vector con el que se está trabajando, existiendo tres tipos de datos, los puntos, las líneas y los polígonos. Entre los formatos más utilizados se encuentra el *shapefile* (`.shp`) o el *GeoJSON* (`.geojson`). 

## Datos Raster

Los rásters o cuadrículas son datos almacenados en una matriz de valores, representados como píxeles. Cada valor de píxel representa un área específica de la superficie terrestre, formando así el dato espacial. Un archivo ráster está compuesto por una cuadrícula regular de celdas de igual tamaño. Probablemente ya hemos utilizado datos ráster, como en fotografías digitales o imágenes de *Google Earth*. Sin embargo, los rásters que vamos a trabajar son distintos de las fotografías comunes, ya que están espacialmente referenciados. Esto significa que cada píxel representa una porción concreta de la superficie terrestre, lo cual se conoce como **resolución espacial**.

Los datos ráster pueden tener una o varias capas (también llamadas *layers* o variables). Por ejemplo, un modelo de elevación generalmente incluye solo una capa que representa la altitud de la superficie terrestre en un área determinada. Sin embargo, otros tipos de datos, como imágenes multiespectrales o series temporales, pueden producir un ráster compuesto por varias capas.

## Sistemas de referencia

Es muy común que se obtengan datos espaciales desde distintas fuentes y que esos datos cubran diferentes extensiones espaciales. Este tipo de datos espaciales se encuentran a menudo en diferentes Sistemas de Referencia de Coordenadas (CRS, por sus siglas en inglés). En el caso de que se quiera trabajar con datos en distints CRS deberemos reproyectarlos. Sin embargo, es importante mencionar que cuando reproyectamos los datos, los estamos modificando. De esta forma estamos introduciendo alguna incerteza en nuestros datos. Mientras que esta incerteza es ligeramente menos importante en los datos vectoriales que en los raster, es necesario considerarla. Por otra parte, si solo se reproyecta para crear un mapa base, no es importante.

## Formación del color

La **teoría aditiva** del color explica cómo se forma el color mediante la combinación de luces de diferentes colores, especialmente los colores primarios de la luz: rojo, verde y azul (*RGB*). Cuando estos colores de luz se mezclan en diversas intensidades, generan una gama completa de colores. 

![Composición *RGB*](foo/web/02-01-pythonRaster.png){#fig-02-01 width=50%}

En un monitor de computadora, cada píxel está compuesto por subpíxeles rojo, verde y azul. Al ajustar la intensidad de cada subpíxel, el monitor produce diferentes colores visibles.

En las imágenes de satélite, esta teoría se aplica para representar las bandas espectrales. Cada banda (p. ej., visible, infrarrojo) se asigna a un canal de color (R, G, B) para crear una composición de color que permite observar características específicas de la superficie terrestre. 

## Tipos de imágenes

Anteriormente ya mencionamos que existen diferentes tipos de imágenes, desde aquellas que almacenan solo una variable, hasta las que contienen varias o cientos.

### Monobanda {-}

Son aquellas que solo almacenan una variable o *layer*. Es común encontrar este tipo de imágenes para almacenar y representar datos de tipo continuo, como la temperatura superficial o la reflectancia. No obstante, se usan también para representar variables de tipo discretas como las categorías de un sistema de clasificación.

```{python}
#| echo: false
#| fig-align: center

import os
import rasterio as rio
import earthpy.plot as ep
import matplotlib.pyplot as plt
import numpy as np

with rio.open("recursos/pre_DTM.tif") as src:
    DEM = src.read(1, masked = True)

f, ax = plt.subplots()
ep.plot_bands(DEM,
              scale = False,
              cmap = 'Greys',
              cbar = False,
              ax = ax)
ax.set_axis_off()
plt.show()
```

### Multiespectral {-}

Las imágenes multiespectrales son raster que poseen datos en varias bandas del espectro electromagnético. Cada banda representa una parte diferente del espectro, por ejemplo, visible, infrarrojo cercano, infrarrojo medio, etc. Las bandas son herramientas analíticas de la superficie terrestre. Por ejemplo, la imagen de un satélite multiespectral tiene bandas para:

- Luz visible (rojo, verde, azul [*RGB*])

- Infrarrojo cercano (*NIR*)

- Infrarrojo medio (*MIR*)

- Otras

Estas bandas se pueden combinar con los colores *RGB* que proporcionan los monitores para obtener distintas composiciones que resaltan características específicas, como la vegetación o el agua. 

```{python}
#| layout-nrow: 2
#| fig-align: center
#| echo: false
#| fig-cap: 
#|   - "Composición Color Natural"
#|   - "Composición Falso Color"

with rio.open("recursos/imagenSenTrue.tif") as src2:
    senti = src2.read()
f, ax2 = plt.subplots()
ep.plot_rgb(senti, 
            ax = ax2,
            rgb = (1, 2, 3),
            stretch = True)
plt.show()

with rio.open("recursos/imagenSenTrue.tif") as src1:
    sentiNir = src1.read()
f, ax1 = plt.subplots()
ep.plot_rgb(sentiNir, 
            ax = ax1,
            rgb = (0, 1, 2),
            stretch = True)
plt.show()
```

## Plataformas y fuentes de datos satelitales 

Existen diversas plataformas y fuentes de datos satelitales que proporcionan imágenes y datos geoespaciales para una amplia variedad de aplicaciones.

### *Terra - Aqua- MODIS* {-}

MODIS es el *Moderate-Resolution Imaging Spectroradiometer* abordo de satélites *Terra* y *Aqua* de la *NASA*. Es capaz de capturar 36 bandas espectrales con una resolución espacial desde 250 metros a 1 kilómetro. Es ampliamente ocupado debido a su alta resolución temporal (nivel diario).

![Bandas de *MODIS*.](foo/web/02-02-modisBands.png){#fig-02-02}

### *Landsat - OLI* {-}

*OLI* es *Operational Land Imager*, a bordo de los últimos satélites *Landsat*. El programa *Landsat* son una seria de misiones satelitales gestionadas por la *NASA* y el Servicio Geológico de Estados Unidos (*USGS*). Desde 1972 han proporcionado imágenes multiespectrales de mediana resolución (30 metros), y continuamente están lanzando nuevos satélites. El último ha sido *Landsat* 9, que fue lanzado el 2021 mejorando la calidad y adquisición de las imágenes de su antecesor (*Landsat* 8).

![Bandas de *Landsat*.](foo/web/02-03-landsatBands.png){#fig-02-03}

### Sentinel - *MSI* {-}

*MSI* es el *Multiespectral Imager* a bordo de los satelitales *Sentinel-2*. Estos forman parte del programa comandado por la Agencia Espacial Europea (*ESA*), lanzando distintas misiones llamadas *Sentinel*. Al igual que *Landsat*, proporciona imágenes de mediana-alta resolución para el monitoreo del Medio Ambiente. El último lanzamiento fue en 2015, el cual consta de dos satélites, *Sentinel-2A* y *Sentinel-2B*, capturando 13 bandas y una resolución que varía desde los 10 a 60 metros.

![Bandas de *Sentinel*.](foo/web/02-04-sentinelBands.png){#fig-02-04}

## Dentro de *Python*

En *Python* las librerías principales para poder trabajar con datos raster son `rasterio` y `earthpy`. `rasterio` es una librería de *Python* diseñada para leer y escribir datos raster geoespaciales, mientras que `earthpy` facilita el manejo de multiples tipos de datos, lidiando con su descarga, descompresión y visualización.

Por ejemplo, se cargará e imprimirá la información de un raster de elevación (*DEM*)

```{python}
#| echo: true
# Importando los paquetes necesarios
import os
import rasterio as rio
import earthpy.plot as ep
import matplotlib.pyplot as plt
import numpy as np

with rio.open("recursos/pre_DTM.tif") as src:
    num_bandas = src.count
    elcrs = src.crs
    print(f"La imagen tiene {num_bandas} bandas.")
    print(f"La imagen tiene {elcrs}.")
    DEM = src.read(1, masked = True)
```

A través de `earthpy` podemos visualizarlo:

```{python}
#| echo: true
f, ax = plt.subplots()

ep.plot_bands(DEM,
              scale = False,
              cmap = 'Greys',
              title = "Modelo Digital de Elevación",
              ax = ax)
plt.show()
```

## Ejercicios {-}

1.  Cargar y visualizar el siguiente [Modelo de Elevación Digital](https://github.com/Aloniss/taller.github.io/raw/refs/heads/master/recursos/descarga/imagenElevationVal.tif).

2.  De la misma manera, descargue la [imagen Sentinel](https://github.com/Aloniss/taller.github.io/raw/refs/heads/master/recursos/descarga/senImagenFullBands.tif)y visualice cada banda que posea.   

3.  De acuerdo con la teoría del color, visualice varias composiciones que representen distintas características de la imagen. Puede usar la siguiente  [página](https://mappinggis.com/2019/05/combinaciones-de-bandas-en-imagenes-de-satelite-landsat-y-sentinel/) para orientarse.

4. Descargue esta [imagen](https://github.com/Aloniss/taller.github.io/raw/refs/heads/master/recursos/descarga/img-rgb.tif) y visualice la composición, observe los histogramas de sus bandas.
    i)  Observar sus histogramas.

    ii) Aplicar un realce lineal

    iii)    Realizar un recorte de la imagen con las coordenadas que se listan abajo:

    - `xmin` = 697030.5734

    - `xmax` = 700721.5109

    - `ymin` = 5494727.9939

    - `ymax` = 5496852.5981

    iv) Aplicar un realce lineal y observar sus histogramas.

::: {.callout-tip collapse="true"}
El paquete `earthpy` posee distintas opciones para graficar las bandas, (`ep.plot_bands`),  composiciones (`et.plot_rgb`) e histogramas (`et.hist`) de una imagen.

Adicionalmente, `rasterio` tiene una función para poder realizar cortes a un raster (`rio.clip_box`).
:::

